<view class="root">
  <!--pages/data/data.wxml-->
  <!-- 输入框的双向数据绑定  bindinput绑定输入事件-->
  <text>---1,输入框的双向数据绑定-----</text>
  <input class="input" value="{{count}}" bindinput="myInput"></input>
  <view class="input-view">输入框绑定的数据是:{{count}}</view>
  <text>---2.按钮事件绑定----</text>
  <button type="primary" bindtap="add">点击数字+1</button>

  <!-- 条件渲染 wx:if相当于vue中的 v-if-->
  <view wx:if="{{iShow}}">是否显示这个标签</view>
  <text>----3.条件渲染----</text>
  <view wx:if="{{count % 2 ==0 }}">当前输入的数字是偶数:</view>

  <view wx:else>当前输入的数字是基数:</view>

  <!-- 列表渲染: -->
  <text>----4.列表渲染----</text>
  <view wx:for="{{nameList}}" wx:key="index">
    {{index}}:{{item}}
  </view>

  <!-- wx:for只写列表,会默认创建item和index变量,直接使用即可 -->
  <!-- 可以通过wx:for-item属性修改index变量名 -->

  <view wx:for="{{nameList}}" wx:for-item="name" wx:for-index="i" wx:key="i">
    {{i}}:{{name}}
  </view>

  <!-- 如果循环的标签并列的多个标签.就用block标签包裹,把循环加载block,block不会被渲染 -->
  <block wx:for="{{nameList}}" wx:key="index">
    <label>索引是{{index}}</label>
    <view>姓名是:{{item}}</view>
  </block>

  <!-- picker 滚动选择器 -->
  <text>----5.滚动选择器----</text>
  <picker range="{{nameList}}" bindchange="nameChange">
    <button>选择召唤师名字:{{nameList[index]}}</button>
  </picker>

  <text>----6,时间选择器----</text>
  <picker value="{{time}}" mode="time" bindchange="timeChange" start="09:00" end="18:00">
    <button>选择时间:{{time}}</button>
  </picker>


  <text>----7,日期选择器----</text>
  <picker value="{{date}}" mode="date" bindchange="dateChange">
    <button>选择时间:{{date}}</button>
  </picker>

  <text>----8,省市区选择器----</text>
  <picker value="{{region}}" mode="region" bindchange="regionChange">
    <button>选择时间:{{region}}</button>
  </picker>


  <text>----8,自定义省市区选择器----</text>
  <view>地址:{{provinces[indexs[0]].name}}--{{cities[indexs[1]].name}}--{{areas[indexs[2]].name}}</view>
  <picker-view value="indexs" indicator-style="height:100rpx" bindchange="areachoose">

    <picker-view-column>
      <view wx:for="{{provinces}}" wx:key="index">{{item.name}}</view>
    </picker-view-column>

    <picker-view-column>
      <view wx:for="{{cities}}" wx:key="index">{{item.name}}</view>
    </picker-view-column>

    <picker-view-column>
      <view wx:for="{{areas}}" wx:key="index">{{item.name}}</view>
    </picker-view-column>

  </picker-view>



</view>